/********************* ROLES **********************/

CREATE ROLE RUSUARIO;
/********************* UDFS ***********************/

/********************* FUNCTIONS ***********************/

/****************** SEQUENCES ********************/

CREATE SEQUENCE GEN_ID_PRODUCTO ;
CREATE SEQUENCE GEN_NUMERO_FACTURA ;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

/******************* PACKAGES ******************/

/******************** TABLES **********************/

CREATE TABLE TBL_DETALLE
(
  NUMERO INTEGER NOT NULL,
  ID_PRODUCTO INTEGER NOT NULL,
  PRECIO DOUBLE PRECISION,
  CANTIDAD DOUBLE PRECISION,
  CONSTRAINT PK_TBL_DETALLE PRIMARY KEY (NUMERO,ID_PRODUCTO)
);
CREATE TABLE TBL_FACTURA
(
  NUMERO INTEGER NOT NULL,
  IMPORTE DOUBLE PRECISION,
  CONSTRAINT PK_TBL_FACTURA PRIMARY KEY (NUMERO)
);
CREATE TABLE TBL_FACTURA_AUX
(
  NUMERO INTEGER NOT NULL,
  ITEMS INTEGER DEFAULT 0,
  CONSTRAINT PK_TBL_FACTURA_AUX PRIMARY KEY (NUMERO)
);
CREATE TABLE TBL_PRODUCTO
(
  ID_PRODUCTO INTEGER NOT NULL,
  DESCRIPCION VARCHAR(60) NOT NULL,
  STOCK DOUBLE PRECISION DEFAULT 0,
  CONSTRAINT PK_TBL_PRODUCTO PRIMARY KEY (ID_PRODUCTO)
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

CREATE EXCEPTION EX_FACTURA
'Una factura puede tener hasta un maximo de 3 items';
CREATE EXCEPTION EX_PRIMARY_KEY
'No esta permitido el cambio de clave primaria';
/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER TRG_AD_DETALLE FOR TBL_DETALLE ACTIVE
AFTER DELETE POSITION 0

AS
BEGIN 
    UPDATE TBL_FACTURA_AUX SET ITEMS = ITEMS - 1 WHERE NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AD_FACTURA FOR TBL_FACTURA ACTIVE
AFTER DELETE POSITION 0

AS
BEGIN
    DELETE FROM TBL_FACTURA_AUX FAUX WHERE FAUX.NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AI_DETALLE FOR TBL_DETALLE ACTIVE
AFTER INSERT POSITION 0

AS
BEGIN 
    UPDATE TBL_FACTURA_AUX SET ITEMS = ITEMS + 1 WHERE NUMERO = NEW.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AI_FACTURA FOR TBL_FACTURA ACTIVE
AFTER INSERT POSITION 0

AS
BEGIN
    INSERT INTO TBL_FACTURA_AUX(NUMERO, ITEMS) VALUES (NEW.NUMERO, 0);
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AU_DETALLE FOR TBL_DETALLE ACTIVE
AFTER UPDATE POSITION 0

AS
BEGIN 
    UPDATE TBL_FACTURA_AUX SET ITEMS = ITEMS + 1 WHERE NUMERO = NEW.NUMERO;
    UPDATE TBL_FACTURA_AUX SET ITEMS = ITEMS - 1 WHERE NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_DETALLE FOR TBL_DETALLE ACTIVE
BEFORE INSERT POSITION 0

AS
BEGIN
    IF((SELECT ITEMS FROM TBL_FACTURA_AUX WHERE NUMERO = NEW.NUMERO) >= 3) THEN 
        EXCEPTION EX_FACTURA;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_FACTURA FOR TBL_FACTURA ACTIVE
BEFORE INSERT POSITION 0

AS 
BEGIN
    NEW.NUMERO = GEN_ID(GEN_NUMERO_FACTURA, 1);
    NEW.IMPORTE = 0;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_PRODUCTO FOR TBL_PRODUCTO ACTIVE
BEFORE INSERT POSITION 0

AS
BEGIN
    NEW.ID_PRODUCTO = GEN_ID(GEN_ID_PRODUCTO, 1);
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_DETALLE FOR TBL_DETALLE ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN 
    IF((OLD.NUMERO <> NEW.NUMERO) AND 
        ((SELECT ITEMS FROM TBL_FACTURA_AUX WHERE NUMERO = NEW.NUMERO) >= 3)) THEN
            EXCEPTION EX_FACTURA;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_FACTURA FOR TBL_FACTURA ACTIVE
BEFORE UPDATE POSITION 0

AS 
BEGIN
    IF(OLD.NUMERO <> NEW.NUMERO) THEN
        EXCEPTION EX_PRIMARY_KEY;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_PRODUCTO FOR TBL_PRODUCTO ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN
    IF(NEW.ID_PRODUCTO <> OLD.ID_PRODUCTO) THEN
        EXCEPTION EX_PRIMARY_KEY;
END
^
SET TERM ; ^
/******************** DB TRIGGERS ********************/

/******************** DDL TRIGGERS ********************/


ALTER TABLE TBL_DETALLE ADD CONSTRAINT CONSTRAINT_CANTIDAD
  check (CANTIDAD >= 0);
ALTER TABLE TBL_DETALLE ADD CONSTRAINT CONSTRAINT_PRECIO
  check (PRECIO >= 0);
ALTER TABLE TBL_PRODUCTO ADD CONSTRAINT CONSTRAINT_STOCK
  check (STOCK >= 0);
GRANT RUSUARIO TO RANDOMUSER;
GRANT RUSUARIO TO USUARIO;
GRANT DELETE, INSERT, SELECT, UPDATE
 ON TBL_DETALLE TO ROLE RUSUARIO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, SELECT, UPDATE
 ON TBL_FACTURA TO ROLE RUSUARIO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT SELECT
 ON TBL_FACTURA_AUX TO ROLE RUSUARIO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_AD_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_AD_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_AI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_AI_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_AU_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_BI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA_AUX TO TRIGGER TRG_BU_DETALLE;

GRANT DELETE, INSERT, SELECT, UPDATE
 ON TBL_PRODUCTO TO ROLE RUSUARIO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

