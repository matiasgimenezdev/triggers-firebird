/********************* ROLES **********************/

CREATE ROLE RUSUARIO;
/********************* UDFS ***********************/

/********************* FUNCTIONS ***********************/

/****************** SEQUENCES ********************/

CREATE SEQUENCE GEN_ID_PRODUCTO ;
CREATE SEQUENCE GEN_NUMERO_FACTURA ;
/******************** DOMAINS *********************/

/******************* PACKAGES ******************/

/******************** TABLES **********************/

CREATE TABLE TBL_DETALLE
(
  NUMERO INTEGER NOT NULL,
  ID INTEGER NOT NULL,
  CANTIDAD DOUBLE PRECISION,
  PRECIO DOUBLE PRECISION,
  CONSTRAINT PK_TBL_DETALLE PRIMARY KEY (NUMERO,ID)
);
CREATE TABLE TBL_FACTURA
(
  NUMERO INTEGER NOT NULL,
  IMPORTE DOUBLE PRECISION DEFAULT 0,
  ITEMS INTEGER DEFAULT 0,
  CONSTRAINT PK_TBL_FACTURA PRIMARY KEY (NUMERO)
);
CREATE TABLE TBL_PRODUCTO
(
  ID INTEGER NOT NULL,
  DESCRIPTION VARCHAR(60),
  STOCK DOUBLE PRECISION NOT NULL,
  CONSTRAINT PK_TBL_PRODUCTO PRIMARY KEY (ID)
);
/********************* VIEWS **********************/

/******************* PROCEDURES ******************/

SET TERM ^ ;
CREATE PROCEDURE PD_TBL_DETALLE (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PD_TBL_FACTURA (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PD_TBL_PRODUCTO (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PI_TBL_DETALLE (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PI_TBL_FACTURA (
    IMPORTE DOUBLE PRECISION )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PI_TBL_PRODUCTO (
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PU_TBL_DETALLE (
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO,
    NEWNUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO DEFAULT NULL,
    NEWID TYPE OF COLUMN TBL_DETALLE.ID DEFAULT NULL )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PU_TBL_FACTURA (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO,
    IMPORTE TYPE OF COLUMN TBL_FACTURA.IMPORTE )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE PU_TBL_PRODUCTO (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK,
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE SP_TBL_DETALLE
RETURNS (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE SP_TBL_FACTURA
RETURNS (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO,
    IMPORTE TYPE OF COLUMN TBL_FACTURA.IMPORTE,
    ITEMS TYPE OF COLUMN TBL_FACTURA.ITEMS )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE SP_TBL_PRODUCTO
RETURNS (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK,
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION )

AS 
BEGIN SUSPEND; 
END^
SET TERM ; ^

/******************* EXCEPTIONS *******************/

CREATE EXCEPTION EX_MAX_ITEMS
'Una factura puede tener un maximo de 3 items';
CREATE EXCEPTION EX_PRIMARY_KEY
'No esta permitido el cambio de clave primaria';
/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER TRG_AD_DETALLE FOR TBL_DETALLE ACTIVE
AFTER DELETE POSITION 0

AS BEGIN
    UPDATE TBL_FACTURA SET ITEMS = ITEMS - 1 WHERE NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AI_DETALLE FOR TBL_DETALLE ACTIVE
AFTER INSERT POSITION 0

AS BEGIN
    UPDATE TBL_FACTURA SET ITEMS = ITEMS + 1 WHERE NUMERO = NEW.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AU_DETALLE FOR TBL_DETALLE ACTIVE
AFTER UPDATE POSITION 0

AS BEGIN
    UPDATE TBL_FACTURA SET ITEMS = ITEMS + 1 WHERE NUMERO = NEW.NUMERO;
    UPDATE TBL_FACTURA SET ITEMS = ITEMS - 1 WHERE NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_DETALLE FOR TBL_DETALLE ACTIVE
BEFORE INSERT POSITION 0

AS BEGIN
    IF((SELECT ITEMS FROM TBL_FACTURA WHERE NUMERO = NEW.NUMERO) >= 3) THEN
        EXCEPTION EX_MAX_ITEMS;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_FACTURA FOR TBL_FACTURA ACTIVE
BEFORE INSERT POSITION 0

AS BEGIN
    NEW.NUMERO = GEN_ID(GEN_NUMERO_FACTURA, 1);
    NEW.IMPORTE = 0;
    NEW.ITEMS = 0;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_PRODUCTO FOR TBL_PRODUCTO ACTIVE
BEFORE INSERT POSITION 0

AS BEGIN
    NEW.ID = GEN_ID(GEN_ID_PRODUCTO, 1);
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_DETALLE FOR TBL_DETALLE ACTIVE
BEFORE UPDATE POSITION 0

AS BEGIN
    IF((SELECT ITEMS FROM TBL_FACTURA WHERE NUMERO = NEW.NUMERO) >= 3) THEN
        EXCEPTION EX_MAX_ITEMS;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_FACTURA FOR TBL_FACTURA ACTIVE
BEFORE UPDATE POSITION 0

AS BEGIN
    IF(NEW.NUMERO <> OLD.NUMERO) THEN
        EXCEPTION EX_PRIMARY_KEY;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_PRODUCTO FOR TBL_PRODUCTO ACTIVE
BEFORE UPDATE POSITION 0

AS BEGIN
    IF(NEW.ID <> OLD.ID) THEN
        EXCEPTION EX_PRIMARY_KEY;
END
^
SET TERM ; ^
/******************** DB TRIGGERS ********************/

/******************** DDL TRIGGERS ********************/


SET TERM ^ ;
ALTER PROCEDURE PD_TBL_DETALLE (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID )


AS
BEGIN
    DELETE FROM TBL_DETALLE D WHERE D.ID = :ID AND D.NUMERO = :NUMERO;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PD_TBL_FACTURA (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO )


AS
BEGIN
    DELETE FROM TBL_FACTURA F WHERE F.NUMERO = :NUMERO;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PD_TBL_PRODUCTO (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID )


AS
BEGIN
    DELETE FROM TBL_PRODUCTO P WHERE P.ID = :ID;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PI_TBL_DETALLE (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO )


AS
BEGIN
  INSERT INTO TBL_DETALLE(NUMERO, ID, CANTIDAD, PRECIO) 
  VALUES (:NUMERO, :ID, :CANTIDAD, :PRECIO);
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PI_TBL_FACTURA (
    IMPORTE DOUBLE PRECISION )


AS
BEGIN
  INSERT INTO TBL_FACTURA(IMPORTE) VALUES (:IMPORTE);
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PI_TBL_PRODUCTO (
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK )


AS
BEGIN
  INSERT INTO TBL_PRODUCTO(DESCRIPTION, STOCK) VALUES (:DESCRIPTION, :STOCK);
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PU_TBL_DETALLE (
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO,
    NEWNUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO DEFAULT NULL,
    NEWID TYPE OF COLUMN TBL_DETALLE.ID DEFAULT NULL )


AS
BEGIN
    UPDATE TBL_DETALLE SET PRECIO = :PRECIO, CANTIDAD = :CANTIDAD WHERE ID = :ID;
    
    if(NEWID <> NULL) THEN
        UPDATE TBL_DETALLE SET ID = :NEWID WHERE ID = :ID;
    
    if(NEWNUMERO <> NULL) THEN
            UPDATE TBL_DETALLE SET NUMERO = :NEWNUMERO WHERE NUMERO = :NUMERO;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PU_TBL_FACTURA (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO,
    IMPORTE TYPE OF COLUMN TBL_FACTURA.IMPORTE )


AS
BEGIN
    UPDATE TBL_FACTURA SET IMPORTE = :IMPORTE WHERE NUMERO = :NUMERO;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE PU_TBL_PRODUCTO (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK,
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION )


AS
BEGIN
    UPDATE TBL_PRODUCTO SET STOCK = :STOCK WHERE ID = :ID;
    UPDATE TBL_PRODUCTO SET DESCRIPTION = :DESCRIPTION WHERE ID = :ID;
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE SP_TBL_DETALLE
RETURNS (
    NUMERO TYPE OF COLUMN TBL_DETALLE.NUMERO,
    ID TYPE OF COLUMN TBL_DETALLE.ID,
    PRECIO TYPE OF COLUMN TBL_DETALLE.PRECIO,
    CANTIDAD TYPE OF COLUMN TBL_DETALLE.CANTIDAD )


AS
BEGIN
    FOR SELECT NUMERO, ID, PRECIO, CANTIDAD FROM TBL_DETALLE 
    INTO :NUMERO, :ID, :PRECIO, :CANTIDAD DO 
    BEGIN 
        SUSPEND;
    END
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE SP_TBL_FACTURA
RETURNS (
    NUMERO TYPE OF COLUMN TBL_FACTURA.NUMERO,
    IMPORTE TYPE OF COLUMN TBL_FACTURA.IMPORTE,
    ITEMS TYPE OF COLUMN TBL_FACTURA.ITEMS )


AS
BEGIN
    FOR SELECT NUMERO, IMPORTE, ITEMS FROM TBL_FACTURA 
    INTO :NUMERO, :IMPORTE, :ITEMS DO 
    BEGIN 
        SUSPEND;
    END
END
^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE SP_TBL_PRODUCTO
RETURNS (
    ID TYPE OF COLUMN TBL_PRODUCTO.ID,
    STOCK TYPE OF COLUMN TBL_PRODUCTO.STOCK,
    DESCRIPTION TYPE OF COLUMN TBL_PRODUCTO.DESCRIPTION )


AS
BEGIN
    FOR SELECT ID, STOCK, DESCRIPTION FROM TBL_PRODUCTO 
    INTO :ID, :STOCK, :DESCRIPTION DO 
    BEGIN 
        SUSPEND;
    END
END
^
SET TERM ; ^


ALTER TABLE TBL_DETALLE ADD CONSTRAINT FK_TBL_DETALLE_FACTURA
  FOREIGN KEY (NUMERO) REFERENCES TBL_FACTURA (NUMERO);
ALTER TABLE TBL_DETALLE ADD CONSTRAINT FK_TBL_DETALLE_PRODUCTO
  FOREIGN KEY (ID) REFERENCES TBL_PRODUCTO (ID);
ALTER TABLE TBL_DETALLE ADD CONSTRAINT CONSTRAINT_CANTIDAD
  check (CANTIDAD >= 0);
ALTER TABLE TBL_DETALLE ADD CONSTRAINT CONSTRAINT_PRECIO
  check (PRECIO >= 0);
ALTER TABLE TBL_PRODUCTO ADD CONSTRAINT CONSTRAINT_STOCK
  check (STOCK >= 0);
GRANT RUSUARIO TO RANDOMUSER;
GRANT RUSUARIO TO USUARIO;
GRANT EXECUTE
 ON PROCEDURE PD_TBL_DETALLE TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PD_TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PD_TBL_FACTURA TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PD_TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PD_TBL_PRODUCTO TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PD_TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_DETALLE TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_FACTURA TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_PRODUCTO TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PI_TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_DETALLE TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_FACTURA TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_PRODUCTO TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE PU_TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_DETALLE TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_FACTURA TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_PRODUCTO TO ROLE RUSUARIO;

GRANT EXECUTE
 ON PROCEDURE SP_TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO PROCEDURE PD_TBL_DETALLE;

GRANT DELETE
 ON TBL_DETALLE TO  PD_TBL_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO PROCEDURE PI_TBL_DETALLE;

GRANT INSERT
 ON TBL_DETALLE TO  PI_TBL_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO PROCEDURE PU_TBL_DETALLE;

GRANT UPDATE
 ON TBL_DETALLE TO  PU_TBL_DETALLE;

GRANT SELECT
 ON TBL_DETALLE TO PROCEDURE SP_TBL_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO TRIGGER TRG_AD_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO TRIGGER TRG_AI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO TRIGGER TRG_AU_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO TRIGGER TRG_BI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_DETALLE TO TRIGGER TRG_BU_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO PROCEDURE PD_TBL_FACTURA;

GRANT DELETE
 ON TBL_FACTURA TO  PD_TBL_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO PROCEDURE PI_TBL_FACTURA;

GRANT INSERT
 ON TBL_FACTURA TO  PI_TBL_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO PROCEDURE PU_TBL_FACTURA;

GRANT UPDATE
 ON TBL_FACTURA TO  PU_TBL_FACTURA;

GRANT SELECT
 ON TBL_FACTURA TO PROCEDURE SP_TBL_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_AD_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_AI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_AU_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_BI_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_BI_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_BU_DETALLE;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_FACTURA TO TRIGGER TRG_BU_FACTURA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO PROCEDURE PD_TBL_PRODUCTO;

GRANT DELETE
 ON TBL_PRODUCTO TO  PD_TBL_PRODUCTO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO PROCEDURE PI_TBL_PRODUCTO;

GRANT INSERT
 ON TBL_PRODUCTO TO  PI_TBL_PRODUCTO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO PROCEDURE PU_TBL_PRODUCTO;

GRANT UPDATE
 ON TBL_PRODUCTO TO  PU_TBL_PRODUCTO;

GRANT SELECT
 ON TBL_PRODUCTO TO PROCEDURE SP_TBL_PRODUCTO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO TRIGGER TRG_BI_PRODUCTO;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON TBL_PRODUCTO TO TRIGGER TRG_BU_PRODUCTO;

